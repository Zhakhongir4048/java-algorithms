В стеке доступен только один элемент данных: тот, который был в него вставлен
последним. Удалив этот элемент, пользователь получает доступ к предпоследнему
элементу и т. д. Такой механизм доступа удобен во многих ситуациях, связанных
с программированием. В этой главе будет показано, как использовать стек для
проверки сбалансированности круглых, фигурных и угловых скобок в исходном
файле компьютерной программы. А в последнем разделе этой главы стек сыграет
важнейшую роль в разборе (анализе) арифметических выражений вида 3 × (4 + 5).
Стек также удобен в алгоритмах, применяемых при работе с некоторыми сложными структурами данных.
В главе 8, «Двоичные деревья», приведен пример его применения при переборе узлов дерева, а в главе 13, «Графы»,
стек используется для поиска вершин графа (алгоритм, с помощью которого можно найти выход из
лабиринта).
Многие микропроцессоры имеют стековую архитектуру. При вызове метода
адрес возврата и аргументы заносятся в стек, а при выходе они извлекаются из
стека. Операции со стеком встроены в микропроцессор.
Стековая архитектура также использовалась в некоторых старых калькуляторах.
Вместо того чтобы вводить арифметическое выражение с круглыми скобками,
пользователь сохранял промежуточные результаты в стеке. Тема будет более подробно описана при обсуждении
разбора арифметических выражений в последнем разделе этой главы.
