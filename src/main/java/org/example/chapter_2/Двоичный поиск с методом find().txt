В самом начале метода переменным lowerBound и upperBound приисваиваются индексы первой
и последней занятой ячейки массива. Эти переменные определяют диапазон, в котором может
находиться элемент с искомым ключом searchKey. Затем в цикле while текущий индекс curIn
устанавливается в середину этого диапазона.
Если повезет, curIn сразу укажет на искомый элемент, поэтому мы сначала
проверяем эту возможность. Если элемент найден, мы возвращаем его индекс curIn.
При каждой итерации цикла диапазон уменьшается вдвое. В конечном итоге он сократится настолько,
что дальнейшее деление станет невозможным. Эта ситуация проверяется в следующей команде:
если lowerBound больше upperBound, значит, поиск завершен. (Если индексы равны, то диапазон состоит
из одного элемента, и понадобится еще одна итерация цикла.) Поиск не может продолжаться без диапазона;
если заданный элемент не найден, метод возвращает nElems, общее количество
элементов. Это значение не является действительным индексом, потому что последняя заполненная ячейка массива
имеет индекс nElems-1. Пользователь класса интерпретирует это значение как признак того,
что элемент не был найден.
Если curIn не указывает на искомый элемент, а диапазон все еще остается достаточно большим,
то его следует разделить пополам. Мы сравниваем значение по текущему индексу a[curIn],
находящееся в середине диапазона, с искомым значением searchKey.

Если значение searchKey больше, значит, поиск должен осуществляться в верхней половине диапазона.
Соответственно lowerBound нужно присвоить значение curIn, а точнее индекс следующей ячейки,
потому что ячейка curIn уже была проверена в начале цикла.
Если значение searchKey меньше a[curIn], то поиск следует ограничить нижней
половиной диапазона. Соответственно upperBound смещается до ячейки, предшествующей curIn