Итак, в приложении � �ort Workshop с 10 столбцами на первом проходе выполняется девять сравнений,
на втором — восемь и так далее, вплоть до одного сравнения на последнем проходе. Для 10 элементов в сумме получается:
9 + 8 + 7 + 6 + 5 + 4 + 3 + 2 + 1 = 45.
В общем виде, если массив состоит из N элементов, на первом проходе выполняются N–1 сравнений,
на втором — N–2 и т. д. Сумма такого ряда вычисляется по формуле:
(N–1) + (N–2) + (N–3) + ... + 1 = N × (N–1)/2.
Если N = 10, то сумма равна 45 (10 × 9/2).

Таким образом, алгоритм выполняет около N2/2 сравнений (на –1 можно не обращать внимания, особенно при больших N).
Количество перестановок меньше количества сравнений, потому что два столбца
переставляются только если того требует алгоритм. Для случайных данных перестановка в среднем выполняется
в половине случаев, поэтому количество перестановок составит около N2/4.
(Хотя в худшем случае, если данные изначально отсортированы в обратном порядке,
перестановка будет выполняться при каждом сравнении).
Количество как перестановок, так и сравнений пропорционально N2. Так как константы в O-синтаксисе не учитываются,
можно сказать, что пузырьковая сортировка выполняется за время O(N2). Это достаточно медленно

Каждый раз, когда вы видите вложенные циклы (как в алгоритме пузырьковой
сортировки или в другом алгоритме сортировки этой главы), можно предположить,
что алгоритм выполняется за время O(N2).
Внешний цикл выполняется N раз, внутренний цикл — тоже N раз для каждой итерации внешнего цикла
(или N, разделенное на константу). Таким образом, всего будет выполнено N×N, или N2 итераций.