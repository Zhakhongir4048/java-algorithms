Для поиска удаляемого элемента метод delete() использует тот же способ, что и метод find().
Однако этот метод должен хранить ссылку не только на текущий элемент списка (current),
но и на предыдущий элемент (previous).
Это необходимо из-за того, что при удалении текущего элемента метод должен связать предыдущий
элемент со следующим.
Чтобы обратиться к предыдущему элементу, необходимо сохранить ссылку на него.

На каждой итерации цикла while, непосредственно перед занесением в current
значения current.next, в поле previous заносится текущее значение current. Таким
образом, previous указывает на элемент списка, предшествующий current.

Чтобы удалить текущий элемент после обнаружения совпадения, полю next
предыдущего элемента присваивается значение next текущего элемента.
Необходимо учесть особый случай, когда текущий элемент является первым в списке,
потому что ссылка на него хранится в поле first объекта LinkList, а не в другом
элементе списка. В этом случае удаление элемента осуществляется занесением в first ссылки из first.next,
как в методе deleteFirst() программы linkList.java.

Фрагмент, в котором проверяются эти две возможности, выглядит так:
 // Совпадение найдено
if(current == first) // Если первый элемент,
 first = first.next; // изменить first
else // В противном случае
 previous.next = current.next; // обойти его в списке
