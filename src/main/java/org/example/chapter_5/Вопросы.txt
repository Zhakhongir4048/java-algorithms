1. Какие из следующих утверждений ложны? Ссылка на объект класса:
Ответ - b) обладает размером, зависящим от класса;
2. Для обращения к элементам связанного списка обычно используется ссылка на ______ элемент.
Ответ - первый
3. Создаваемая ссылка на элемент связанного списка:
Ответ - может указывать на произвольный элемент.
4. Сколько ссылок необходимо изменить для вставки элемента в середину односвязного списка?
Ответ - 2
5. Сколько ссылок необходимо изменить для вставки элемента в конец односвязного списка?
Ответ - 1
6. В коде метода insertFirst() программы linkList.java (см. листинг 5.1) команда
newLink.next=first; означает, что:
Ответ - c) поле next нового элемента будет содержать ссылку на элемент, который раньше был первым в списке.
7. Предположим, поле current указывает на предпоследний элемент односвязного списка.
Как выглядит команда для удаления последнего элемента списка?
Ответ - current.next=null;
8. Что происходит с элементом списка, когда все ссылки на него начинают указывать на другой объект?
Ответ - он уничтожается уборщиком мусора Java.
9. Двусторонний список:
Ответ - a) поддерживает доступ с любого из двух концов;
10. В методах вставки и удаления необходимо проверять особый случай: ________
список
Ответ - пустой
11. Если копирование занимает больше времени, чем сравнение, где удаление элемента с заданным ключом
будет выполняться быстрее: в связанном списке или в несортированном массиве?
Ответ - в связанном списке
12. Сколько перемещений по односвязному списку потребуется для удаления
элемента с наибольшим ключом?
Ответ - одно, если в элементах хранится ссылка на предыдущий элемент.
13. Какая из разновидностей списков, рассмотренных в этой главе, лучше всего
подойдет для реализации очереди?
Ответ - двусторонний список.
14. Какое из следующих утверждений ложно? Итераторы удобно применить для выполнения:
Ответ - b
15. Какая структура данных, на ваш взгляд, лучше подойдет для реализации стека:
односвязный список или массив?
Ответ - Вероятно, список. В обоих случаях операции push() и pop() выполняются за время O(1),
но список более эффективно использует память.
