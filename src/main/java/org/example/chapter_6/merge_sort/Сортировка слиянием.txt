Пузырьковая сортировка, сортировка методом вставки и сортировка методом выбора - O(N2)
Сортировка слиянием - O(N × logN)
Недостаток сортировки слиянием заключается в том, что она требует выделения в памяти дополнительного массива
с размером, равным размеру сортируемого массива.

Идея сортировки слиянием заключается в том, чтобы разделить массив пополам, отсортировать каждую половину,
а затем воспользоваться методом merge() для слияния двух половин в один отсортированный массив.
Половина делится на две четверти, каждая четверть сортируется по отдельности, после чего две четверти
объединяются в отсортированную половину.
Аналогичным образом каждая пара 8-х частей сливается в отсортированную четверть и т. д.
Массив делится снова и снова, пока не будет получен подмассив из единственного элемента.
Это базовое ограничение; предполагается, что массив из одного элемента уже отсортирован.

В mergeSort() при каждом рекурсивном вызове диапазон делится надвое, а при каждом возвращении — две половины
объединяются в один больший диапазон.
Когда метод mergeSort() возвращает управление после обнаружения двух массивов, содержащих по одному элементу,
он объединяет их в отсортированный массив из двух элементов.
Далее каждая пара полученных 2-элементных массивов объединяется в массив из 4-х элементов.
Процесс продолжается с массивами постоянно увеличивающихся размеров до тех пор,
пока весь массив не будет отсортирован.

В mergeSort() при каждом рекурсивном вызове диапазон делится надвое, а при каждом возвращении
— две половины объединяются в один больший диапазон.
Когда метод mergeSort() возвращает управление после обнаружения двух массивов, содержащих по одному элементу,
он объединяет их в отсортированный массив из двух элементов.
Далее каждая пара полученных 2-элементных массивов объединяется в массив из 4-х элементов.
Процесс продолжается с массивами постоянно увеличивающихся размеров до тех пор,
пока весь массив не будет отсортирован.

Сначала в нижней половине массива диапазоны 0-0 и 1-1 объединяются в диапазон 0-1.
Конечно, 0-0 и 1-1 не являются полноценными диапазонами; они состоят лишь из одного элемента, то есть
относятся к базовым ограничениям. Аналогичным образом диапазоны 2-2 и 3-3 объединяются в 2-3,
после чего диапазоны 0-1 и 2-3 объединяются в 0-3.
В верхней половине массива диапазоны 4-4 и 5-5 объединяются в 4-5, диапазоны 6-6 и 7-7 объединяются в 6-7,
а диапазоны 4-5 и 6-7 объединяются в 4-7. Наконец, верхняя половина 0-3 и нижняя половина 4-7 объединяются
в полный массив 0-7, элементы которого отсортированы.

Если размер массива не является степенью 2, в слиянии участвуют массивы разных размеров.
Например, на рис. 6.16 показано, как выполняется сортировка массива из 12 элементов.
Здесь массив из двух элементов объединяется с массивом из одного элемента, образуя массив из трех элементов.
Сначала «одноэлементные» диапазоны 0-0 и 1-1 объединяются в диапазон 0-1 из двух элементов.
Затем диапазон 0-1 объединяется с одноэлементным диапазоном 2-2, образуя состоящий
из трех элементов диапазон 0-2. Он объединяется с диапазоном 3-5, также состоящим из трех элементов.
Процесс продолжается до тех пор, пока весь массив не будет отсортирован.

Обратите внимание: при сортировке слиянием два разных массива не объединяются в третий, как это делалось
в программе merge.java. Вместо этого осуществляется слияние частей одного массива внутри него самого.
Алгоритм создает рабочую область, размер которой равен размеру исходного массива.
Таким образом, подмассивы из исходного массива копируются в соответствующие места рабочей области.
После каждого слияния данные из рабочей области копируются в исходный массив.
