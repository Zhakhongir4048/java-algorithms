Каждый символ обычного несжатого текстового файла представляется одним байтом (традиционный код ASCII)
или двумя байтами (более новая схема кодирования Юникод, которая проектировалась с целью поддержки любых языков).
В этих схемах каждый символ кодируется одинаковым количеством битов.
В таблице 8.3 приведены двоичные представления некоторых символов в коде ASCII. Как видно из таблицы,
каждый символ представляется 8 битами.

Существуют разные способы сжатия данных.
Для текста чаще всего применяется способ, основанный на уменьшении количества битов в представлении самых
частых символов. В английском языке чаще всего встречается буква E, поэтому для ее кодирования логично
выбрать как можно меньшее количество битов. С другой стороны, буква Z встречается редко,
и большая длина ее кодировки уже не столь существенна.

Допустим, в представлении буквы �E используются всего два бита, например 01.
Закодировать двумя битами каждую букву алфавита не удастся, потому
что существуют всего четыре двухразрядные комбинации: 00, 01, 10 и 11.
Нельзя ли использовать эти комбинации для представления четырех наиболее часто используемых символов?

К сожалению, нельзя.
Необходимо следить за тем, чтобы символы не начинались с комбинации битов, присутствующей
в начале более длинного кода другого символа.
Например, если буква E кодируется комбинацией 01, а буква X — комбинацией 01011000,
то декодирующий алгоритм при обработке 01011000 не будет знать, является ли префикс 01 кодом буквы E
или началом кода X. Отсюда следует правило:
Ни один код не должен быть префиксом другого кода.

Также необходимо учесть, что в некоторых сообщениях символ E может и не быть наиболее часто используемым символом.
Например, если текст представляет собой файл с исходным кодом на языке Java, то символ «;» (точка с запятой)
может встречаться чаще, чем E.
Чтобы справиться с этой проблемой, мы будем строить для каждого сообщения новый код,
адаптированный для этого конкретного сообщения.
Допустим, потребовалось переслать сообщение «SUSIE SAYS IT IS EASY». Буква S встречается в нем
чаще остальных букв — как и пробел. Создание кода начинается с построения частотной таблицы,
в которой указана частота (количество вхождений) каждого символа (табл. 8.4).

Символы с наибольшим количеством вхождений должны кодироваться малым количеством битов.
В таблице 8.5 представлена одна из возможных кодировок приведенного ранее сообщения.

Буква S кодируется комбинацией 10, а пробел — комбинацией 00.
Использовать комбинации 01 или 11 нельзя, потому что они являются префиксами других символов.
