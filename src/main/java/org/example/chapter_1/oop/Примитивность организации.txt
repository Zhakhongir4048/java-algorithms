Более хитрая, хотя и взаимосвязанная проблема относилась к внутренней организации программ.
В процедурных программах код делился на методы. Один из недостатков такого способа структурирования
заключался в том, что методы выходили на первый план в ущерб данным.
В том, что касалось данных, свобода выбора программиста была весьма ограничена.
Слегка упрощая, можно сказать, что данные могли быть локальными для конкретного метода или же глобальными,
то есть доступными для всех методов. Нельзя было (по крайней мере достаточно
гибко и универсально) указать, что одни методы могут обращаться к переменной, а другим методам это запрещено.
Такое отсутствие гибкости создавало проблемы, когда разные методы должны
были работать с одними данными. Чтобы сделать переменную доступной для
нескольких методов, ее приходилось объявлять глобальной, однако глобальные
данные становились доступными для всех методов программы. Это часто приводило к ошибкам программирования.
Необходим был механизм точной настройки доступности, чтобы данные были доступны для тех методов,
которым это действительно нужно, и оставались скрытыми от всех остальных методов.
