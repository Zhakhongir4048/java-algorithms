Процедурные языки не позволяли качественно отразить концептуальную модель реальных ситуаций.

Если написать программу управления термостатом на процедурном языке, скорее всего, в ней появятся два метода
furnace_on() и furnace_off() и две глобальные переменные currentTemp (значение которой определяется
показаниями термометра) и desiredTemp (значение задается пользователем).
Однако эти методы и переменные не формируют никакой программной единицы;
в программе нет ничего, что можно было бы назвать общим термином thermostat.
Такая концепция существует только в уме программиста.
В больших программах, содержащих тысячи подобных сущностей, процедурный подход повышал вероятность ошибок,
устраивал хаос, а иногда и вовсе делал реализацию невозможной.
Необходим был механизм определения более четких соответствий между объектами программы и объектами
реального мира.
